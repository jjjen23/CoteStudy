# 백준 : 퇴사 <- 정말 이해가 어려웠다.
n = int(input())
t = [] #상담에 걸리는 일수 저장
p = [] #상담비 저장

# 각 날짜별 최대 비용을 저장할 dp
dp = [0 for i in range(n+1)]

for _ in range(n):
    T, P = map(int, input().split())
    t.append(T)
    p.append(P)

# 상향식
for i in range(n):
    # 상담에 필요한 일수가 퇴사일 이내일 때
    if t[i] + i <= n:
        # i+t[i] 에있을 예정인 돈과(상담 안한 경우), 상담해서 돈을 번경우 중에 더 큰 값을 상담 종료 예정일에 저장
        dp[i+t[i]] = max(dp[i+t[i]], dp[i]+p[i])
    # 다음단계에서 현재 단계의 최대 보상을 가져와 다늠 단계의 최대 보상을 업데이트 해준다. -> 다음 반복문 진행
    dp[i+1] = max(dp[i+1], dp[i]) #현재 가진 돈이 내일 가지게될 돈보다 많은 경우 내일까지 진행하는 상담 취소(다음날에도 현재돈 유지하기)

print(dp[n]) #결국 퇴사일에는 얻을 수 있는 최대 이익이 저장되어있음


